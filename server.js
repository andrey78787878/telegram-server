require('dotenv').config();
const express = require('express');
const axios = require('axios');

const app = express();
app.use(express.json());

// üîê –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_TOKEN = process.env.BOT_TOKEN;
const GAS_WEB_APP_URL = process.env.GAS_WEB_APP_URL;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;
const WEBHOOK_URL = process.env.WEBHOOK_URL;
const PORT = process.env.PORT || 3000;

// ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if (!BOT_TOKEN || !GAS_WEB_APP_URL || !TELEGRAM_CHAT_ID || !WEBHOOK_URL) {
  console.error('‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã! –ü—Ä–æ–≤–µ—Ä—å .env —Ñ–∞–π–ª.');
  process.exit(1);
}

const TELEGRAM_API = `https://api.telegram.org/bot${BOT_TOKEN}`;
const userStates = {};

// ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
async function setTelegramWebhook() {
  try {
    const res = await axios.get(`${TELEGRAM_API}/setWebhook?url=${WEBHOOK_URL}`);
    console.log('‚úÖ –í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', res.data);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞:', err.response?.data || err.message);
  }
}

// üîÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
async function checkPendingRequestsAndSend() {
  try {
    const res = await axios.post(GAS_WEB_APP_URL, { action: 'getPendingMessages' });
    const pending = res.data;

    if (!pending || !Array.isArray(pending) || pending.length === 0) {
      console.log('‚ÑπÔ∏è –ù–µ—Ç –∑–∞—è–≤–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.');
      return;
    }

    for (const rowObj of pending) {
      const {
        row, pizzaria, classif, category, problem,
        initiator, phone, deadline
      } = rowObj;

      const message = `üìç <b>–ó–∞—è–≤–∫–∞ #${row}</b>\n\nüçï <b>–ü–∏—Ü—Ü–µ—Ä–∏—è:</b> ${pizzaria}\nüîß <b>–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è:</b> ${classif}\nüìÇ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> ${category}\nüìã <b>–ü—Ä–æ–±–ª–µ–º–∞:</b> ${problem}\nüë§ <b>–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä:</b> ${initiator}\nüìû <b>–¢–µ–ª:</b> ${phone}\nüïì <b>–°—Ä–æ–∫:</b> ${deadline}`;

      const keyboard = {
        inline_keyboard: [
          [{ text: '–ü—Ä–∏–Ω—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É üü¢', callback_data: `in_progress:${row}` }]
        ]
      };

      try {
        const resMsg = await axios.post(`${TELEGRAM_API}/sendMessage`, {
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: 'HTML',
          reply_markup: keyboard
        });

        const message_id = resMsg.data.result.message_id;

        await axios.post(GAS_WEB_APP_URL, {
          action: 'markMessageSent',
          row,
          message_id
        });

        console.log(`‚úÖ –ó–∞—è–≤–∫–∞ #${row} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞`);
      } catch (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ #${row}:`, err.response?.data || err.message);
      }
    }
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫:', err.response?.data || err.message);
  }
}

// üîò –†—É—á–Ω–æ–π –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ POST
app.post('/send-pending', async (req, res) => {
  const { action } = req.body;
  if (action === 'sendPending') {
    await checkPendingRequestsAndSend();
    return res.send('‚úÖ –ó–∞—è–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã');
  }
  res.status(400).send('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π action');
});

// üì¶ Telegram-—Ö–µ–Ω–¥–ª–µ—Ä—ã
try {
  const setupTelegramHandlers = require('./telegram-handlers');
  setupTelegramHandlers(app, userStates);
  console.log('‚úÖ Telegram-—Ö–µ–Ω–¥–ª–µ—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã');
} catch (e) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ telegram-handlers.js:', e.message);
}

// üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  await setTelegramWebhook();
  await checkPendingRequestsAndSend(); // –Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  setInterval(checkPendingRequestsAndSend, 2 * 60 * 1000); // –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã
});
